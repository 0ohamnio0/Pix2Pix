// Tensor concatenation kernels
// https://github.com/keijiro/Pix2Pix

#pragma enable_d3d11_debug_symbols

#pragma kernel Concat

Buffer<float> Input1;
Buffer<float> Input2;
RWBuffer<float> Output;

uint3 InputShape;

[numthreads(64, 1, 1)]
void Concat(uint2 tid : SV_DispatchThreadID)
{
    const uint channels = InputShape.z;

    const uint offs_i = tid.y * channels;
    const uint offs_o1 = tid.y * channels * 2;
    const uint offs_o2 = offs_o1 + channels;

    for (uint i = tid.x; i < channels; i += 64)
    {
        Output[offs_o1 + i] = Input1[offs_i + i];
        Output[offs_o2 + i] = Input2[offs_i + i];
    }
}

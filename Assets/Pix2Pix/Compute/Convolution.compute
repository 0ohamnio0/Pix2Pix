#pragma kernel Conv2D_64_8
#pragma kernel Conv2D_512_1
#pragma kernel TransConv2D_3_128
#pragma kernel TransConv2D_64_8
#pragma kernel TransConv2D_512_1

Buffer<float> Input;
Buffer<float> Filter;
Buffer<float> Bias;
RWBuffer<float> Output;

uint3 InputShape;
uint4 FilterShape;
uint3 OutputShape;

float GetInput(uint3 pos, uint2 pad)
{
    if (any(pos.xy < pad) || any(pos.xy >= InputShape.xy + pad)) return 0;
    pos.xy -= pad.xy;
    return Input[(pos.x * InputShape.y + pos.y) * InputShape.z + pos.z];
}

float GetFilter(uint4 i)
{
    return Filter[((i.x * FilterShape.y + i.y) * FilterShape.z + i.z) * FilterShape.w + i.w];
}

uint OutputIndex(uint3 i)
{
    return (i.x * OutputShape.y + i.y) * OutputShape.z + i.z;
}

[numthreads(64, 8, 1)] void Conv2D_64_8
#include "Convolution.hlsl"

[numthreads(512, 1, 1)] void Conv2D_512_1
#include "Convolution.hlsl"

#define CONVOLUTION_TRANSPOSE

[numthreads(3, 128, 1)] void TransConv2D_3_128
#include "Convolution.hlsl"

[numthreads(64, 8, 1)] void TransConv2D_64_8
#include "Convolution.hlsl"

[numthreads(512, 1, 1)] void TransConv2D_512_1
#include "Convolution.hlsl"
